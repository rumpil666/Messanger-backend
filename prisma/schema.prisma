// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now()) @map("created_at")

  email     String @unique
  nickname  String @unique
  imageUrl  String @default("https://avatars.githubusercontent.com/u/33729094?v=4") @map("image_url")
  firstName String @map("first_name")
  lastName  String @map("last_name")
  password  String

  messages Message[]
  admins Chat[]

  @@map("user")
}

model Message {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  user   User   @relation(fields: [sender], references: [id])
  sender String @map("sender")

  messageBody String?  @map("message_body")
  fileList    String[] @map("file_list")

  chat   Chat   @relation(fields: [chatId], references: [id])
  chatId String @map("chat_id")

  @@map("message")
}

model Chat {
  id String @id @default(cuid())

  name String

  isGroup Boolean @default(false) @map("is_group")

  imageUrl String @map("image_url")

  user      User   @relation(fields: [admin], references: [id])
  admin String @map("admin")

  participants String[]
  messages     Message[]

  @@map("chat")
}
